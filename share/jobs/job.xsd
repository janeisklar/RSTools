<?xml version="1.0" encoding="utf-8"?>
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns="http://www.fmri.at/rstools" targetNamespace="http://www.fmri.at/rstools" elementFormDefault="qualified">
    <xs:element name="job">
        <xs:complexType>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element name="description" type="xs:string"/>
                <xs:element ref="parameters"/>
                <xs:element ref="tasks"/>
            </xs:choice>
        </xs:complexType>
    </xs:element>
    <xs:element name="parameters">
        <xs:complexType>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <xs:element name="param">
                    <xs:complexType>
                        <xs:simpleContent>
                            <xs:extension base="xs:string">
                                <xs:attribute name="name" type="xs:string" use="required"/>
                            </xs:extension>
                        </xs:simpleContent>
                    </xs:complexType>
                </xs:element>
            </xs:choice>
        </xs:complexType>
    </xs:element>
    <xs:element name="tasks">
        <xs:complexType>
            <xs:choice minOccurs="0" maxOccurs="unbounded">
                <!--
                    for every registered xsd-extension one entry is added in the form:
                    
                    <xs:element name="extensionName" type="extensionType"/>
                    
                    extensionName - refers to the name of the xml-node in the job-file
                    extensionType - refers to the name of xsd-schema type defnition
                    
                    'extensionName' and 'extensionType' may and mostly will be the equal.
                    
                    The type that is referenced here should be defined in a separate
                    extension file and is than brought in the second placeholder below.
                -->
                <!-- %%TYPELIST%% -->
            </xs:choice>
        </xs:complexType>
    </xs:element>
    <xs:complexType name="rstask">
        <xs:choice minOccurs="0" maxOccurs="unbounded">
            <xs:element name="description" type="xs:string"/>
            <xs:element name="args">
                <xs:complexType>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element name="arg">
                            <xs:complexType>
                                <xs:simpleContent>
                                    <xs:extension base="xs:string">
                                        <xs:attribute name="name" type="xs:string" use="required"/>
                                    </xs:extension>
                                </xs:simpleContent>
                            </xs:complexType>
                        </xs:element>
                    </xs:choice>
                </xs:complexType>
            </xs:element>
            <xs:element name="options">
                <xs:complexType>
                    <xs:choice minOccurs="0" maxOccurs="unbounded">
                        <xs:element name="save_output" type="xs:string"/>
                    </xs:choice>
                </xs:complexType>
            </xs:element>
        </xs:choice>
    </xs:complexType>
    <!--
        all registered xsd-extensions will be brought in below, this allows
        to define custom xml-schema type definitions that accomodate the
        needs for tools that need more or other arguments than the definition
        of type 'rstask' contains
    -->
    <!-- %%EXTENSIONS%% -->
</xs:schema>
